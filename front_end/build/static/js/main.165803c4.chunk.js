(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(e,t,a){},104:function(e,t){},109:function(e,t){},111:function(e,t){},141:function(e,t){},143:function(e,t){},144:function(e,t){},149:function(e,t){},152:function(e,t){},172:function(e,t){},188:function(e,t){},191:function(e,t){},195:function(e,t,a){},196:function(e,t,a){},197:function(e,t,a){},198:function(e,t,a){},199:function(e,t,a){},201:function(e,t,a){"use strict";a.r(t);var r=a(0),n=a.n(r),l=a(90),o=a.n(l),c=(a(97),a(98),a(2));a(99);var s=()=>{const e=Object(c.o)();Object(r.useEffect)(()=>{(async()=>{try{(await fetch("http://localhost:5000/notLoggedIn",{credentials:"include"})).ok||e("/user")}catch(t){console.error("Error checking logged in status:",t)}})()},[e]);return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement("h1",null,"progressive"),n.a.createElement("button",{id:"login",onClick:()=>{e("/login")}},"Login")),n.a.createElement("div",{id:"intro"},"Progressive overload is hard...",n.a.createElement("br",null),n.a.createElement("br",null),"Actually, I should say, keeping track of the progress is hard.",n.a.createElement("br",null),n.a.createElement("br",null),"That is why I have built this app."),n.a.createElement("div",{id:"details"}),n.a.createElement("button",{id:"register",onClick:()=>{e("/register")}},"Register"))},i=(a(100),a(30)),u=a.n(i),m=a(5);u.a.config();var d=()=>{const e=Object(c.o)(),[t,a]=Object(r.useState)(""),[l,o]=Object(r.useState)(""),[s,i]=Object(r.useState)(""),[u,d]=Object(r.useState)({username:"",password:"",repeatPassword:""});Object(r.useEffect)(()=>{(async()=>{try{(await fetch("http://localhost:5000/notLoggedIn",{credentials:"include"})).ok||e("/user")}catch(t){console.error("Error checking logged in status:",t)}})()},[e]);return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement(m.b,{to:"/login"},n.a.createElement("h1",null,"progressive"))),n.a.createElement("div",{id:"registration"},n.a.createElement("h1",null,"Register"),n.a.createElement("form",{onSubmit:async a=>{a.preventDefault(),d({username:"",password:"",repeatPassword:""});let r=!0;const n={username:"",password:"",repeatPassword:""};if(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(t)||(n.username="Enter a valid email address.",r=!1),l.length<8&&(n.password="Password must be at least 8 characters long.",r=!1),s!==l&&(n.repeatPassword="Passwords do not match.",r=!1),d(n),r){const t=a.target,r=t[0],n=t[1],l={username:"",password:"",repeatPassword:""};try{const t=await fetch("http://localhost:5000/register",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({username:r.value,password:n.value})});if(!t.ok)throw l.username="Email already exists",d(l),new Error(`Error: ${t.status} ${t.statusText}`);e("/login")}catch(o){o instanceof Error?console.error("Fetch error:",o.message):console.error("Unexpected error:",o)}}}},n.a.createElement("div",{className:"container"},n.a.createElement("div",{className:"row"},u.username&&n.a.createElement("span",{className:"error"},u.username)),n.a.createElement("div",{className:"row"},n.a.createElement("div",{className:"col-3"},n.a.createElement("label",null,"Email")),n.a.createElement("div",{className:"col-9"},n.a.createElement("input",{type:"email",name:"email",value:t,onChange:e=>{a(e.target.value)},required:!0}))),n.a.createElement("div",{className:"row"},u.password&&n.a.createElement("span",{className:"error"},u.password)),n.a.createElement("div",{className:"row"},n.a.createElement("div",{className:"col-3"},n.a.createElement("label",null,"Password")),n.a.createElement("div",{className:"col-9"},n.a.createElement("input",{type:"password",name:"password",value:l,onChange:e=>o(e.target.value),required:!0}))),n.a.createElement("div",{className:"row"},u.repeatPassword&&n.a.createElement("span",{className:"error"},u.repeatPassword)),n.a.createElement("div",{className:"row"},n.a.createElement("div",{className:"col-3"},n.a.createElement("label",null,"Confirm Password")),n.a.createElement("div",{className:"col-9"},n.a.createElement("input",{type:"password",name:"repeatPassword",value:s,onChange:e=>i(e.target.value),required:!0})))),n.a.createElement("div",{className:"row justify-content-center"},n.a.createElement("div",{className:"col-auto"},n.a.createElement("button",{type:"submit"},"Register"))))))};a(195);var E=()=>{const[e,t]=Object(r.useState)(""),[a,l]=Object(r.useState)(""),[o,s]=Object(r.useState)({username:"",password:""}),i=Object(c.o)();Object(r.useEffect)(()=>{(async()=>{try{(await fetch("http://localhost:5000/notLoggedIn",{credentials:"include"})).ok||i("/user")}catch(e){console.error("Error checking logged in status:",e)}})()},[i]);return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement(m.b,{to:"/"},n.a.createElement("h1",null,"progressive"))),n.a.createElement("div",{id:"registration"},n.a.createElement("h1",null,"Login"),n.a.createElement("form",{onSubmit:async t=>{t.preventDefault(),s({username:"",password:""});let r=!0;const n={username:"",password:""};if(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(e)||(n.username="Enter a valid email address.",r=!1),r)try{const t=await fetch("http://localhost:5000/login",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({username:e,password:a})});if(t.ok)i("/user");else{const e=await t.json();s({username:e.message,password:""})}}catch(l){console.error("Fetch error:",l)}else s(n)}},n.a.createElement("div",{className:"container"},n.a.createElement("div",{className:"row"},o.username&&n.a.createElement("span",{className:"error"},o.username)),n.a.createElement("div",{className:"row"},n.a.createElement("div",{className:"col-3"},n.a.createElement("label",null,"Email")),n.a.createElement("div",{className:"col-9"},n.a.createElement("input",{type:"email",value:e,onChange:e=>t(e.target.value),required:!0}))),n.a.createElement("div",{className:"row"},o.password&&n.a.createElement("span",{className:"error"},o.password)),n.a.createElement("div",{className:"row"},n.a.createElement("div",{className:"col-3"},n.a.createElement("label",null,"Password")),n.a.createElement("div",{className:"col-9"},n.a.createElement("input",{type:"password",value:a,onChange:e=>l(e.target.value),required:!0})))),n.a.createElement("div",{className:"row justify-content-center"},n.a.createElement("div",{className:"col-auto"},n.a.createElement("button",{type:"submit",id:"login-button"},"Login"))))))};a(196);u.a.config();const p=async()=>{console.log("logout ran");try{(await fetch("http://localhost:5000/logout",{method:"POST",credentials:"include"})).ok?console.log("Logged out successfully"):console.error("Logout failed")}catch(e){console.error("Error:",e)}};var g=()=>{const[e,t]=Object(r.useState)(""),[a,l]=Object(r.useState)(),[o,s]=Object(r.useState)([]),[i,u]=Object(r.useState)([]),m=e?e.split("@")[0]:"",d=Object(c.o)();Object(r.useEffect)(()=>{(async()=>{try{const a=await fetch("http://localhost:5000/loggedin",{credentials:"include"});if(a.ok){const e=await a.json();t(e.username)}else d("/login")}catch(e){console.error("Error checking logged in status:",e)}})()},[d]);const E=async()=>{try{const t=await fetch("http://localhost:5000/getWorkoutList",{credentials:"include"});if(t.ok){const e=await t.json();l(e.workouts)}}catch(e){console.error("Error getting workout data:",e)}};Object(r.useEffect)(()=>{E()},[]),Object(r.useEffect)(()=>{a&&(s(a[0]),u(a[1]))},[a]),Object(r.useEffect)(()=>{},[o]);return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement("h1",null,"progressive"),n.a.createElement("button",{id:"logout",onClick:()=>{p(),d("/login")}},"Logout")),n.a.createElement("h2",null,m),n.a.createElement("div",{id:"exercises"},void 0!==o&&o.map((e,t)=>n.a.createElement("div",{id:"workout-block",key:t},n.a.createElement("h4",{id:"workout-title"},e.workout_name),n.a.createElement("div",{id:"exerciseList"},void 0!==i[t]&&i[t].map(e=>n.a.createElement("div",{className:"exercise",key:e.workout_data.workoutData[0]+t},"Weighted Reps"===e.workout_data.workoutData[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"exercise-row-userpage"},n.a.createElement("strong",{id:"exercise-name-userpage"},e.workout_data.workoutData[0],":"),n.a.createElement("div",{id:"exercise-details-userpage"},n.a.createElement("strong",null,e.workout_data.workoutData[2]," ",e.workout_data.workoutData[3])," ","for"," ",n.a.createElement("strong",null,e.workout_data.workoutData[4]," reps"),n.a.createElement("br",null),"for ",n.a.createElement("strong",null,e.workout_data.workoutData[5]," sets")))),"Bodyweight Reps"===e.workout_data.workoutData[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"exercise-row-userpage"},n.a.createElement("strong",{id:"exercise-name-userpage"},e.workout_data.workoutData[0],":"),n.a.createElement("div",{id:"exercise-details-userpage"},n.a.createElement("strong",null,e.workout_data.workoutData[2]," reps"),"\xa0 for ",n.a.createElement("strong",null,e.workout_data.workoutData[3]," sets")))),"Timed Exercise"===e.workout_data.workoutData[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"exercise-row-userpage"},n.a.createElement("strong",{id:"exercise-name-userpage"},e.workout_data.workoutData[0],":"),n.a.createElement("div",{id:"exercise-details-userpage"},n.a.createElement("strong",null,e.workout_data.workoutData[2]," ","seconds"),"\xa0 for ",n.a.createElement("strong",null,e.workout_data.workoutData[3]," sets"))))))),n.a.createElement("div",{id:"button-row"},n.a.createElement("button",{id:"start",onClick:()=>(async e=>{const t=o[e].id;d("/workout/"+t)})(t)},"Start"),n.a.createElement("button",{id:"edit",onClick:()=>(e=>{d("/editWorkout/"+o[e].id)})(t)},"Edit"),n.a.createElement("button",{id:"delete",onClick:()=>(async e=>{const t=o[e].id;try{(await fetch("http://localhost:5000/deleteWorkout",{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({workoutId:t})})).ok&&E()}catch(a){console.error("Error deleting workout:",a)}})(t)},"Delete"))))),n.a.createElement("div",{className:"center-button"},"create workout",n.a.createElement("button",{onClick:()=>{d("/createWorkout")}},"+"),"create workout"))};a(197);var h=()=>{const[e,t]=Object(r.useState)(""),a=e?e.split("@")[0]:"",[l,o]=Object(r.useState)(""),s=Object(c.o)(),[i,u]=Object(r.useState)();Object(r.useEffect)(()=>{(async()=>{try{const a=await fetch("http://localhost:5000/loggedin",{credentials:"include"});if(a.ok){const e=await a.json();t(e.username)}else s("/login")}catch(e){console.error("Error checking logged in status:",e)}})()},[s]);const d=e=>{e.preventDefault();const t=document.getElementById("workout-name");t&&(""!==t.value?o(t.value):o("New Workout"))};Object(r.useEffect)(()=>{(async()=>{if(l)try{const t=await fetch("http://localhost:5000/createWorkoutName",{credentials:"include",headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify({workoutName:l})}),a=await t.json();u(a.id)}catch(e){console.error("Error uploading workout title:",e)}})()},[l]),Object(r.useEffect)(()=>{l&&i&&s(`/editWorkout/${i}`)},[i,s,l]);return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement(m.b,{to:"/user"},n.a.createElement("h1",null,"progressive")),n.a.createElement("button",{id:"logout",onClick:()=>{p(),s("/login")}},"Logout")),n.a.createElement("h2",null,a),n.a.createElement("div",{id:"getWorkoutName"},n.a.createElement("form",{onSubmit:d},n.a.createElement("label",null,"Workout Name"),n.a.createElement("br",null),n.a.createElement("input",{type:"text",maxLength:30,id:"workout-name"}),n.a.createElement("br",null),n.a.createElement("button",{type:"button",onClick:d},"Submit"))))};a(198);var y=()=>{const[e,t]=Object(r.useState)(""),[a,l]=Object(r.useState)("Weighted Reps"),[o,s]=Object(r.useState)(""),i=e?e.split("@")[0]:"",{workoutId:u}=Object(c.q)(),[d,E]=Object(r.useState)(0),[g,h]=Object(r.useState)([]),y=Object(c.o)();Object(r.useEffect)(()=>{(async()=>{try{const a=await fetch("http://localhost:5000/loggedin",{credentials:"include"});if(a.ok){const e=await a.json();t(e.username)}else y("/login")}catch(e){console.error("Error checking logged in status:",e)}})()},[y]),Object(r.useEffect)(()=>{(async()=>{try{const t=await fetch("http://localhost:5000/getWorkout?workoutId="+u,{credentials:"include",headers:{"Content-Type":"application/json"}});if(t.ok){const e=await t.json();s(e.workoutName)}else y("/user")}catch(e){console.error("Error getting workout:",e)}})()},[y,u]),Object(r.useEffect)(()=>{let e=[];(async()=>{try{const a=await fetch("http://localhost:5000/getWorkoutData?workoutId="+u,{credentials:"include",headers:{"Content-Type":"application/json"}});if(a.ok){const t=await a.json();if(e=[],t.workoutData)for(let a=0;a<t.workoutData.length;a++)e.push(t.workoutData[a].workout_data.workoutData);h(e)}}catch(t){console.error("Error getting workout data:",t)}})()},[d,u]);const f=async e=>{try{await fetch("http://localhost:5000/removeExercise",{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({workoutId:u,index:e})})}catch(t){console.error("Error adding exercise:",t)}E(e=>e-1)};return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement(m.b,{to:"/user"},n.a.createElement("h1",null,"progressive")),n.a.createElement("button",{id:"logout",onClick:()=>{p(),y("/login")}},"Logout")),n.a.createElement("h2",null,i),n.a.createElement("div",{id:"workout"},n.a.createElement("h3",{id:"workoutName"},o),n.a.createElement("div",{id:"exerciseList"},g.map((e,t)=>n.a.createElement("div",{key:t,className:"exercise"},"Weighted Reps"===e[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"exercise-row"},n.a.createElement("strong",{id:"exercise-name"},e[0],":"),n.a.createElement("div",{id:"exercise-details"},n.a.createElement("strong",null,e[2]," ",e[3])," ","for ",n.a.createElement("strong",null,e[4]," reps"),n.a.createElement("br",null),"for ",n.a.createElement("strong",null,e[5]," sets")),n.a.createElement("button",{id:"remove-exercise",onClick:()=>f(t)},"-"))),"Bodyweight Reps"===e[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"exercise-row"},n.a.createElement("strong",{id:"exercise-name"},e[0],":"),n.a.createElement("div",{id:"exercise-details"},n.a.createElement("strong",null,e[2]," reps"),"\xa0for ",n.a.createElement("strong",null,e[3]," sets")),n.a.createElement("button",{id:"remove-exercise",onClick:()=>f(t)},"-"))),"Timed Exercise"===e[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"exercise-row"},n.a.createElement("strong",{id:"exercise-name"},e[0],":"),n.a.createElement("div",{id:"exercise-details"},n.a.createElement("strong",null,e[2]," seconds"),n.a.createElement("br",null),"for ",n.a.createElement("strong",null,e[3]," sets")),n.a.createElement("button",{id:"remove-exercise",onClick:()=>f(t)},"-")))))),n.a.createElement("button",{type:"button",onClick:e=>{e.preventDefault(),document.getElementById("createWorkout").style.display="block";const t=document.getElementById("add-exercise-button");t&&(t.style.display="none")},id:"add-exercise-button"},"Add Exercise")),n.a.createElement("div",{id:"createWorkout"},n.a.createElement("form",{onSubmit:async e=>{e.preventDefault();const t=[],a=e.target[1].value;if("Weighted Reps"===a){const r=e.target[0].value,n=e.target[2].value,l=e.target[3].value,o=e.target[4].value,c=e.target[5].value;t.push(r),t.push(a),t.push(n),t.push(l),t.push(o),t.push(c)}if("Bodyweight Reps"===a){const r=e.target[0].value,n=e.target[2].value,l=e.target[3].value;t.push(r),t.push(a),t.push(n),t.push(l)}if("Timed Exercise"===a){const r=e.target[0].value,n=e.target[2].value,l=e.target[3].value;t.push(r),t.push(a),t.push(n),t.push(l)}try{await fetch("http://localhost:5000/addExercise",{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({workoutId:u,workoutData:t})})}catch(s){console.error("Error adding exercise:",s)}document.getElementById("exerciseName").value="";const r=document.getElementById("weight");r&&(r.value="");const n=document.getElementById("smallInput");n&&(n.value="");const l=document.getElementById("time");l&&(l.value="");const o=document.getElementById("sets");o&&(o.value=""),document.getElementById("createWorkout").style.display="none",E(e=>e+1);const c=document.getElementById("add-exercise-button");c&&(c.style.display="block")}},n.a.createElement("div",{className:"container"},n.a.createElement("div",{className:"row"},n.a.createElement("div",{className:"col-12"},n.a.createElement("label",null,"Exercise Name")),n.a.createElement("div",{className:"col-12 center-input"},n.a.createElement("input",{type:"text",maxLength:30,id:"exerciseName"}))),n.a.createElement("div",{className:"row margin-top"},n.a.createElement("div",{className:"col-12"},n.a.createElement("label",null,"Exercise Type")),n.a.createElement("div",{className:"col-12 center-input"},n.a.createElement("select",{value:a,onChange:e=>{l(e.target.value)},id:"workoutType",className:"center-input"},n.a.createElement("option",{value:"Weighted Reps"},"Weighted Reps"),n.a.createElement("option",{value:"Bodyweight Reps"},"Bodyweight Reps"),n.a.createElement("option",{value:"Timed Exercise"},"Timed Exercise")))),"Weighted Reps"===a&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"row margin-top g-1"},n.a.createElement("label",null,"Starting Weight"),n.a.createElement("br",null),n.a.createElement("div",{id:"getWeight"},n.a.createElement("input",{type:"number",name:"StartingWeight",style:{textAlign:"right"},id:"weight",min:"0",max:"9999"}),n.a.createElement("select",{id:"unit"},n.a.createElement("option",{value:"kg"},"Kg"),n.a.createElement("option",{value:"lbs"},"lbs")))),n.a.createElement("div",{className:"row justify-content-center margin-top",id:"repsInput"},n.a.createElement("label",{id:"noOfReps"},"Number of Reps"),n.a.createElement("input",{type:"number",id:"smallInput",min:"1",max:"99"}))),"Bodyweight Reps"===a&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"row justify-content-center margin-top",id:"repsInput"},n.a.createElement("label",{id:"noOfReps"},"Number of Reps"),n.a.createElement("input",{type:"number",id:"smallInput",min:"1",max:"99"}))),"Timed Exercise"===a&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"row justify-content-center margin-top",id:"repsInput"},n.a.createElement("label",{id:"lengthOfTime"},"Starting length of time(s):"),n.a.createElement("input",{type:"number",id:"time",min:"1",max:"99999"}))),n.a.createElement("div",{className:"row justify-content-center margin-top",id:"setsInput"},n.a.createElement("label",{id:"number-of-sets"},"Number of Sets"),n.a.createElement("input",{type:"number",id:"sets"}))),n.a.createElement("button",{type:"submit"},"Add Exercise"))))};a(199);var f=()=>{const{workoutId:e}=Object(c.q)(),[t,a]=Object(r.useState)([]),[l,o]=Object(r.useState)(),[s,i]=Object(r.useState)(0),[u,d]=Object(r.useState)([]),E=Object(c.o)(),[g,h]=Object(r.useState)(""),y=g?g.split("@")[0]:"";Object(r.useEffect)(()=>{(async()=>{try{const t=await fetch("http://localhost:5000/loggedin",{credentials:"include"});if(t.ok){const e=await t.json();h(e.username)}else E("/login")}catch(e){console.error("Error checking logged in status:",e)}})()},[E]),Object(r.useEffect)(()=>{(async()=>{try{const a=await fetch("http://localhost:5000/getWorkout?workoutId="+e,{credentials:"include",headers:{"Content-Type":"application/json"}});if(a.ok){const e=await a.json();o(e.workoutName)}}catch(t){console.error("Error getting workout:",t)}})()},[e]),Object(r.useEffect)(()=>{let t;(async()=>{try{const n=await fetch("http://localhost:5000/getWorkoutData?workoutId="+e,{credentials:"include",headers:{"Content-Type":"application/json"}});if(n.ok){const e=await n.json();if(t=[],e.workoutData)for(let a=0;a<e.workoutData.length;a++)t.push(e.workoutData[a]);a(t)}}catch(r){console.error("Error getting workout data:",r)}})()},[e]),Object(r.useEffect)(()=>{t[s]&&d(t[s].workout_data.workoutData)},[t,s]);const f=async e=>{e.preventDefault();const a=new FormData(e.currentTarget).get("progress"),r=[...u];r[2]=a,d(r);const n=r,l=t[s].last_difficulty;try{await fetch("http://localhost:5000/uploadExerciseDifficulty",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({exerciseId:t[s].id,difficulty:l,workoutData:n})})}catch(i){console.error("Error uploading feedback data:",i)}const o=document.getElementById("progress-exercise"),c=document.getElementById("current-exercise");o&&(o.style.display="none"),c&&(c.style.display="block")},w=async e=>{e.preventDefault();const a=new FormData(e.currentTarget).get("unitToIncrease"),r=[...u];if("true"===a&&"Bodyweight Reps"===r[1]){const e=()=>{const e=Math.floor(.05*parseFloat(r[2]));return e>0?e:1};r[2]=parseFloat(r[2])+e()}if("true"===a&&"Timed Exercise"===r[1]){const e=()=>{let e;return e=parseFloat(r[2])<60?5:59<parseFloat(r[2])&&parseFloat(r[2])<150?10:30};r[2]=parseFloat(r[2])+e()}d(r);const n=t[s].last_difficulty,l=r;try{await fetch("http://localhost:5000/uploadExerciseDifficulty",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({exerciseId:t[s].id,difficulty:n,workoutData:l})})}catch(i){console.error("Error uploading feedback data:",i)}const o=document.getElementById("progress-exercise"),c=document.getElementById("current-exercise");o&&(o.style.display="none"),c&&(c.style.display="block")};Object(r.useEffect)(()=>{const e=document.getElementById("progress-exercise"),a=document.getElementById("current-exercise");t[s]&&("h"===t[s].last_difficulty&&(e&&(e.style.display="none"),a&&(a.style.display="block")),"m"===t[s].last_difficulty&&(a&&(a.style.display="none"),e&&(e.style.display="block")),"e"===t[s].last_difficulty&&(a&&(a.style.display="none"),e&&(e.style.display="block")),null===t[s].last_difficulty&&(a&&(a.style.display="block"),e&&(e.style.display="none")))},[t,s]);const b=async()=>{const e=[...u];if("Bodyweight Reps"===e[1]){const t=()=>{const t=Math.round(.05*parseFloat(e[2]));return t>0?t:1};e[2]=parseFloat(e[2])+t()}if("Timed Exercise"===e[1]){const t=()=>{let t;return t=parseFloat(e[2])<60?5:59<parseFloat(e[2])&&parseFloat(e[2])<150?10:30};e[2]=parseFloat(e[2])+t()}d(e);const a=t[s].last_difficulty,r=e;try{await fetch("http://localhost:5000/uploadExerciseDifficulty",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({exerciseId:t[s].id,difficulty:a,workoutData:r})})}catch(o){console.error("Error uploading feedback data:",o)}const n=document.getElementById("progress-exercise"),l=document.getElementById("current-exercise");n&&(n.style.display="none"),l&&(l.style.display="block")};return n.a.createElement(n.a.Fragment,null,n.a.createElement("header",null,n.a.createElement(m.b,{to:"/user"},n.a.createElement("h1",null,"progressive")),n.a.createElement("button",{id:"logout",onClick:()=>{p(),E("/login")}},"Logout")),n.a.createElement("h2",null,y),n.a.createElement("div",{id:"progress-exercise",style:{display:"none"}},t[s]&&"m"===t[s].last_difficulty&&n.a.createElement(n.a.Fragment,null,n.a.createElement("h3",null,l),n.a.createElement("h5",null,"You struggled but completed these sets last time"),n.a.createElement("div",{id:"current-exercise-details"},void 0!==u&&"Weighted Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2],u[3])," ","for\xa0",n.a.createElement("strong",null,u[4]," reps"),n.a.createElement("br",null),"for ",n.a.createElement("strong",null,u[5]," sets")))),void 0!==u&&"Bodyweight Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2]," reps")," for\xa0",n.a.createElement("strong",null,u[3]," sets")))),void 0!==u&&"Timed Exercise"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2]," seconds"),n.a.createElement("br",null)," for\xa0",n.a.createElement("strong",null,u[3]," sets"))))),n.a.createElement("h5",{id:"second-h5"},"Increase difficulty if you wish"),void 0!==u&&"Weighted Reps"===u[1]&&n.a.createElement("form",{onSubmit:f},"Pick you're next available weight up or keep it the same",n.a.createElement("br",null),n.a.createElement("select",{id:"progress",name:"progress"},[0,1,2,2.5,3,4,5,6,7,7.5,8,9,10].map(e=>n.a.createElement("option",{key:e,value:parseFloat(u[2])+e},parseFloat(u[2])+e))),"\xa0",u[3],n.a.createElement("br",null),n.a.createElement("button",{type:"submit",id:"update"},"Update")),void 0!==u&&"Bodyweight Reps"===u[1]&&n.a.createElement("form",{onSubmit:w},"Add ",n.a.createElement("strong",null,"5%")," to reps, or not?",n.a.createElement("br",null),n.a.createElement("label",{id:"radio-yes-no"},n.a.createElement("input",{type:"radio",name:"unitToIncrease",value:"true"})," ","Yes!"),n.a.createElement("label",{id:"radio-yes-no"},n.a.createElement("input",{type:"radio",name:"unitToIncrease",value:"false"})," ","No"),n.a.createElement("br",null),n.a.createElement("button",{type:"submit",id:"update"},"Update")),void 0!==u&&"Timed Exercise"===u[1]&&n.a.createElement("form",{onSubmit:w},"Add ",n.a.createElement("strong",null,"more time"),", or not?",n.a.createElement("br",null),n.a.createElement("label",{id:"radio-yes-no"},n.a.createElement("input",{type:"radio",name:"unitToIncrease",value:"true"})," ","Yes!"),n.a.createElement("label",{id:"radio-yes-no"},n.a.createElement("input",{type:"radio",name:"unitToIncrease",value:"false"})," ","No"),n.a.createElement("br",null),n.a.createElement("button",{type:"submit",id:"update"},"Update"))),t[s]&&"e"===t[s].last_difficulty&&n.a.createElement(n.a.Fragment,null,n.a.createElement("h3",null,l),n.a.createElement("h5",null,"You said these sets were easy last time!"),n.a.createElement("div",{id:"current-exercise-details"},void 0!==u&&"Weighted Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2],u[3])," ","for\xa0",n.a.createElement("strong",null,u[4]," reps"),n.a.createElement("br",null),"for ",n.a.createElement("strong",null,u[5]," sets")))),void 0!==u&&"Bodyweight Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2]," reps")," for\xa0",n.a.createElement("strong",null,u[3]," sets")))),void 0!==u&&"Timed Exercise"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2]," seconds"),n.a.createElement("br",null)," for\xa0",n.a.createElement("strong",null,u[3]," sets"))))),n.a.createElement("h5",{id:"second-h5"},"Time to up the difficulty!"),void 0!==u&&"Weighted Reps"===u[1]&&n.a.createElement("form",{onSubmit:f},"Pick you're next available weight up",n.a.createElement("br",null),n.a.createElement("select",{id:"progress",name:"progress"},[1,2,2.5,3,4,5,6,7,7.5,8,9,10].map(e=>n.a.createElement("option",{key:e,value:parseFloat(u[2])+e},parseFloat(u[2])+e))),"\xa0",u[3],n.a.createElement("br",null),n.a.createElement("button",{type:"submit",id:"update"},"Update")),void 0!==u&&"Bodyweight Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,"Lets increase those reps!",n.a.createElement("br",null),n.a.createElement("strong",null,"5%")," added",n.a.createElement("br",null),n.a.createElement("button",{onClick:b,id:"continue"},"Continue",">>")),void 0!==u&&"Timed Exercise"===u[1]&&n.a.createElement(n.a.Fragment,null,"Lets bump up that time!",n.a.createElement("br",null),n.a.createElement("strong",null,"Time increased!"),n.a.createElement("br",null),n.a.createElement("button",{onClick:b,id:"continue"},"Continue",">>")))),n.a.createElement("div",{id:"current-exercise",style:{display:"none"}},n.a.createElement("h3",null,l),n.a.createElement("div",{id:"current-exercise-details"},s<t.length-1&&n.a.createElement("h4",{id:"current-exercise-text"},"Current Exercise"),s>=t.length-1&&n.a.createElement("h4",{id:"current-exercise-text"},"Final Exercise"),void 0!==u&&"Weighted Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2],u[3])," ","for\xa0",n.a.createElement("strong",null,u[4]," reps"),n.a.createElement("br",null),"for ",n.a.createElement("strong",null,u[5]," sets")))),void 0!==u&&"Bodyweight Reps"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2]," reps")," for\xa0",n.a.createElement("strong",null,u[3]," sets")))),void 0!==u&&"Timed Exercise"===u[1]&&n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{id:"workout-details"},n.a.createElement("strong",{id:"exercise-name"},u[0]),n.a.createElement("div",{id:"workout-data"},n.a.createElement("strong",null,u[2]," seconds"),n.a.createElement("br",null)," for\xa0",n.a.createElement("strong",null,u[3]," sets"))))),s<t.length-1&&n.a.createElement("div",{id:"skip-row"},"Machine Taken?",n.a.createElement("button",{id:"skip-exercise",onClick:()=>{const e=t;for(let a=t.length-1;a>s+1;a--)e[a+1]=e[a];e[s+2]=e[s],a(e),i(e=>e+1)}},"Skip Exercise for Now")),n.a.createElement("div",{id:"complete-exercise"},n.a.createElement("h5",null,"Was the last rep difficult?"),n.a.createElement("form",{onSubmit:async e=>{e.preventDefault();const a=new FormData(e.currentTarget).get("difficulty");e.currentTarget.reset();const r=u;try{await fetch("http://localhost:5000/uploadExerciseDifficulty",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({exerciseId:t[s].id,difficulty:a[0],workoutData:r})})}catch(n){console.error("Error uploading feedback data:",n)}i(e=>e+1),s>=t.length-1&&E("/user")}},n.a.createElement("label",{id:"hard"},n.a.createElement("input",{type:"radio",name:"difficulty",value:"hard"})," I could not do it..."),n.a.createElement("br",null),n.a.createElement("label",{id:"medium"},n.a.createElement("input",{type:"radio",name:"difficulty",value:"medium"})," It was slow and hard."),n.a.createElement("br",null),n.a.createElement("label",{id:"easy"},n.a.createElement("input",{type:"radio",name:"difficulty",value:"easy"})," It moved easily!"),n.a.createElement("br",null),s<t.length-1&&n.a.createElement("button",{type:"submit"},"Next Exercise",">>"),s>=t.length-1&&n.a.createElement("button",{type:"submit"},"Finish Workout! ",">>")))))};var w=function(){return n.a.createElement(c.c,null,n.a.createElement(c.a,{path:"/",element:n.a.createElement(s,null)}),n.a.createElement(c.a,{path:"/register",element:n.a.createElement(d,null)}),n.a.createElement(c.a,{path:"/login",element:n.a.createElement(E,null)}),n.a.createElement(c.a,{path:"/user",element:n.a.createElement(g,null)}),n.a.createElement(c.a,{path:"/createworkout",element:n.a.createElement(h,null)}),n.a.createElement(c.a,{path:"/editWorkout/:workoutId",element:n.a.createElement(y,null)}),n.a.createElement(c.a,{path:"/workout/:workoutId",element:n.a.createElement(f,null)}))};var b=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,202)).then(t=>{let{getCLS:a,getFID:r,getFCP:n,getLCP:l,getTTFB:o}=t;a(e),r(e),n(e),l(e),o(e)})};a(200);o.a.createRoot(document.getElementById("root")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(m.a,null,n.a.createElement(w,null)))),b()},91:function(e,t,a){e.exports=a(201)},97:function(e,t,a){},98:function(e,t,a){},99:function(e,t,a){}},[[91,1,2]]]);
//# sourceMappingURL=main.165803c4.chunk.js.map
{"version":3,"sources":["pages/home/Home.tsx","pages/register/Register.tsx","pages/login/Login.tsx","helperFunctions.ts","pages/userPage/UserPage.tsx","pages/createWorkout/CreateWorkout.tsx","pages/editWorkout/EditWorkout.tsx","pages/workout/Workout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","navigate","useNavigate","useEffect","async","fetch","process","credentials","ok","error","console","checkLoggedIn","React","createElement","Fragment","id","onClick","goToLogin","goToRegister","dotenv","config","Register","username","setUsername","useState","password","setPassword","repeatPassword","setRepeatPassword","errors","setErrors","Link","to","onSubmit","event","preventDefault","isValid","newErrors","test","length","form","target","usernameInput","passwordInput","response","method","headers","Content-Type","body","JSON","stringify","value","Error","status","statusText","message","className","type","name","onChange","e","required","Login","errorData","json","logout","log","UserPage","workouts","setWorkouts","workoutNames","setWorkoutNames","workoutExercises","setWorkoutExercises","displayName","split","data","getWorkouts","logoutApp","undefined","map","workout","index","key","workout_name","exercise","workout_data","workoutData","workoutId","workoutIndex","startExercise","editWorkout","deleteWorkout","goToCreateWorkout","CreateWorkout","workoutName","setWorkoutName","setWorkoutId","handleSubmitWorkoutName","workoutNameInput","document","getElementById","uploadWorkoutTitle","maxLength","EditWorkout","selectedOption","setSelectedOption","useParams","submitCount","setSubmitCount","updateWorkoutData","setUpdateWorkoutData","getWorkoutNameById","currentWorkoutData","i","push","getWorkoutDataById","removeExercise","prev","style","display","addExerciseButton","exerciseData","typeOfExercise","exerciseName","startingWeight","startingWeightUnit","noOfReps","noOfSets","timeOfExercise","weightInput","repsInput","timeInput","setsInput","textAlign","min","max","Workout","exercises","setExercises","setWorkoutIndex","currentExercise","setCurrentExercise","progressExercise","newWeight","FormData","currentTarget","get","tempExercise","newWorkoutData","difficulty","last_difficulty","exerciseId","progressExerciseDiv","currentExerciseDiv","progressExerciseUnit","unitToIncrease","increaseBy","Math","floor","parseFloat","hideProgression","round","increment","skipExercise","tempExercises","reset","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.165803c4.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./home.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Home: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/notLoggedIn\", {\n          credentials: \"include\"\n        });\n\n        if (!response.ok) {\n          navigate(`/user`);\n        } \n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  const goToRegister = () => {\n    navigate('/register')\n  }\n\n  const goToLogin = () => {\n    navigate('/login')\n  }\n\n  return (\n    <>\n      <header>\n        <h1>progressive</h1>\n        <button id=\"login\" onClick={goToLogin}>Login</button>\n      </header>\n        <div id=\"intro\">\n            Progressive overload is hard...\n            <br />\n            <br />\n            Actually, I should say, keeping track of the progress is hard.\n            <br />\n            <br />\n            That is why I have built this app.\n        </div>\n        <div id=\"details\">\n\n        </div>\n        <button id=\"register\" onClick={goToRegister} >Register</button>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./register.css\";\nimport dotenv from \"dotenv\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\ndotenv.config();\n\nconst Register: React.FC = () => {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/notLoggedIn\",{\n            credentials: \"include\"\n          }\n        );\n\n        if (!response.ok) {\n          // If logged in, redirect to user's page\n          navigate(`/user`);\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrors({ username: \"\", password: \"\", repeatPassword: \"\" });\n\n    let isValid = true;\n    const newErrors = { username: \"\", password: \"\", repeatPassword: \"\" };\n\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    if (!emailPattern.test(username)) {\n      newErrors.username = \"Enter a valid email address.\";\n      isValid = false;\n    }\n\n    if (password.length < 8) {\n      newErrors.password = \"Password must be at least 8 characters long.\";\n      isValid = false;\n    }\n\n    if (repeatPassword !== password) {\n      newErrors.repeatPassword = \"Passwords do not match.\";\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n\n    //form submission\n    if (isValid) {\n      const form = event.target as HTMLFormElement;\n\n      const usernameInput = form[0] as HTMLInputElement;\n      const passwordInput = form[1] as HTMLInputElement;\n\n      const newErrors = { username: \"\", password: \"\", repeatPassword: \"\" };\n\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/register\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              username: usernameInput.value,\n              password: passwordInput.value,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          newErrors.username = \"Email already exists\";\n          setErrors(newErrors)\n          throw new Error(`Error: ${response.status} ${response.statusText}`);\n        } else {\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(\"Fetch error:\", error.message);\n        } else {\n          console.error(\"Unexpected error:\", error);\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <Link to=\"/login\">\n          <h1>progressive</h1>\n        </Link>\n      </header>\n      <div id=\"registration\">\n        <h1>Register</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"container\">\n            <div className=\"row\">\n              {errors.username && (\n                <span className=\"error\">{errors.username}</span>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <label>Email</label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={username}\n                  onChange={(e) => {\n                    setUsername(e.target.value);\n                  }}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              {errors.password && (\n                <span className=\"error\">{errors.password}</span>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <label>Password</label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              {errors.repeatPassword && (\n                <span className=\"error\">{errors.repeatPassword}</span>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <label>Confirm Password</label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"password\"\n                  name=\"repeatPassword\"\n                  value={repeatPassword}\n                  onChange={(e) => setRepeatPassword(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-auto\">\n              <button type=\"submit\">Register</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./login.css\";\n\nconst Login: React.FC = () => {\n  const [ username, setUsername ] = useState('');\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({ username: \"\", password: \"\" });\n  const navigate = useNavigate();\n\n  //check if already logged in\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/notLoggedIn\", {\n          credentials: 'include' // Include credentials for same-origin requests\n        });\n\n        if (!response.ok) {\n          // If logged in, redirect to user's page\n          navigate(`/user`);\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setErrors({ username: \"\", password: \"\" }); // Clear previous errors\n\n    let isValid = true;\n    const newErrors = { username: \"\", password: \"\" };\n\n    // Validate email format\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailPattern.test(username)) {\n      newErrors.username = \"Enter a valid email address.\";\n      isValid = false;\n    }\n\n    if (isValid) {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/login\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            credentials: 'include',\n            body: JSON.stringify({ username, password }),\n          }\n        );\n\n        if (response.ok) {\n          navigate(`/user`);\n        } else {\n          const errorData = await response.json();\n          setErrors({ username: errorData.message, password: \"\" }); // Update error message\n        }\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    } else {\n      setErrors(newErrors); // Set validation errors\n    }\n  };\n\n\n  return (\n    <>\n      <header>\n        <Link to={\"/\"}><h1>progressive</h1></Link>\n      </header>\n      <div id=\"registration\">\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"container\">\n            <div className=\"row\">\n              {errors.username && (\n                <span className=\"error\">{errors.username}</span>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <label>Email</label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"email\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              {errors.password && (\n                <span className=\"error\">{errors.password}</span>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <label>Password</label>\n              </div>\n              <div className=\"col-9\">\n                <input\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-auto\">\n              <button type=\"submit\" id=\"login-button\">Login</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import dotenv from 'dotenv'\n\ndotenv.config()\n\nexport const logout = async () => {\n    console.log('logout ran')\n    try {\n        const response = await fetch(process.env.REACT_APP_SERVER_URL + '/logout', {\n            method: 'POST',\n            credentials: 'include', // Ensures cookies are sent with the request\n        });\n        if (response.ok) {\n            console.log('Logged out successfully');\n        } else {\n            console.error('Logout failed');\n        }\n    } catch (error) {\n        console.error('Error:', error);\n    }\n};","import React, { useEffect, useState } from \"react\";\nimport \"./userPage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { logout } from \"../../helperFunctions\";\n\nconst UserPage: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [workouts, setWorkouts] = useState();\n  const [workoutNames, setWorkoutNames] = useState<any[]>([]);\n  const [workoutExercises, setWorkoutExercises] = useState<any[]>([]);\n\n  const displayName = username ? username.split(\"@\")[0] : \"\";\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/loggedin\",\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          // If logged in, redirect to user's page\n          setUsername(data.username);\n        } else {\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  const goToCreateWorkout = () => {\n    navigate(`/createWorkout`);\n  };\n\n  const logoutApp = () => {\n    logout();\n    navigate(\"/login\");\n  };\n\n  const getWorkouts = async () => {\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/getWorkoutList\",\n        {\n          credentials: \"include\", // Include credentials for same-origin requests\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        setWorkouts(data.workouts);\n      }\n    } catch (error) {\n      console.error(\"Error getting workout data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getWorkouts();\n  }, []);\n\n  useEffect(() => {\n    if (workouts) {\n      setWorkoutNames(workouts[0]);\n      setWorkoutExercises(workouts[1]);\n    }\n  }, [workouts]);\n\n  useEffect(() => {}, [workoutNames]);\n\n  const editWorkout = (workoutIndex: number) => {\n    navigate(\"/editWorkout/\" + workoutNames[workoutIndex].id);\n  };\n\n  const deleteWorkout = async (workoutIndex: number) => {\n    const workoutId = workoutNames[workoutIndex].id;\n\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/deleteWorkout\",\n        {\n          credentials: \"include\",\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            workoutId: workoutId,\n          }),\n        }\n      );\n\n      if (response.ok) {\n        getWorkouts();\n      }\n    } catch (error) {\n      console.error(\"Error deleting workout:\", error);\n    }\n  };\n\n  const startExercise = async (workoutIndex: number) => {\n    const workoutId = workoutNames[workoutIndex].id;\n\n    navigate(\"/workout/\" + workoutId);\n  };\n\n  return (\n    <>\n      <header>\n        <h1>progressive</h1>\n        <button id=\"logout\" onClick={logoutApp}>\n          Logout\n        </button>\n      </header>\n        <h2>{displayName}</h2>\n        <div id=\"exercises\">\n          {workoutNames !== undefined &&\n            workoutNames.map((workout, index) => {\n              return (\n                <div id=\"workout-block\" key={index}>\n                  <h4 id=\"workout-title\">{workout.workout_name}</h4>\n                  <div id=\"exerciseList\">\n                    {workoutExercises[index] !== undefined &&\n                      workoutExercises[index].map((exercise: any) => (\n                        <div className=\"exercise\" key={exercise.workout_data.workoutData[0] + index}>\n                          {/* Check the exercise type */}\n                          {exercise.workout_data.workoutData[1] ===\n                            \"Weighted Reps\" && (\n                            <>\n                              {/* Format for Weighted Reps */}\n                              <div className=\"exercise-row-userpage\">\n                                <strong id=\"exercise-name-userpage\">\n                                  {exercise.workout_data.workoutData[0]}:\n                                </strong>\n                                <div id=\"exercise-details-userpage\">\n                                  <strong>\n                                    {exercise.workout_data.workoutData[2]}{\" \"}\n                                    {exercise.workout_data.workoutData[3]}\n                                  </strong>{\" \"}\n                                  for{\" \"}\n                                  <strong>\n                                    {exercise.workout_data.workoutData[4]} reps\n                                  </strong>\n                                  <br />\n                                  for <strong>{exercise.workout_data.workoutData[5]} sets</strong>\n                                </div>\n                              </div>\n                            </>\n                          )}\n                          {exercise.workout_data.workoutData[1] ===\n                            \"Bodyweight Reps\" && (\n                            <>\n                              {/* Format for Bodyweight Reps */}\n                              <div className=\"exercise-row-userpage\">\n                                <strong id=\"exercise-name-userpage\">\n                                  {exercise.workout_data.workoutData[0]}:\n                                </strong>\n                                <div id=\"exercise-details-userpage\">\n                                  <strong>\n                                    {exercise.workout_data.workoutData[2]} reps\n                                  </strong>\n                                  &nbsp; for <strong>{exercise.workout_data.workoutData[3]} sets</strong>\n                                </div>\n                              </div>\n                            </>\n                          )}\n                          {exercise.workout_data.workoutData[1] ===\n                            \"Timed Exercise\" && (\n                            <>\n                              {/* Format for Timed Exercise */}\n                              <div className=\"exercise-row-userpage\">\n                                <strong id=\"exercise-name-userpage\">\n                                  {exercise.workout_data.workoutData[0]}:\n                                </strong>\n                                <div id=\"exercise-details-userpage\">\n                                  <strong>\n                                    {exercise.workout_data.workoutData[2]}{\" \"}\n                                    seconds\n                                  </strong>&nbsp;\n                                  for <strong>{exercise.workout_data.workoutData[3]} sets</strong>\n                                </div>\n                              </div>\n                            </>\n                          )}\n                        </div>\n                      ))}\n                  </div>\n                  <div id=\"button-row\">\n                    <button id=\"start\" onClick={() => startExercise(index)}>\n                      Start\n                    </button>\n                    <button id=\"edit\" onClick={() => editWorkout(index)}>\n                      Edit\n                    </button>\n                    <button id=\"delete\" onClick={() => deleteWorkout(index)}>\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n        <div className=\"center-button\">\n          create workout\n          <button onClick={goToCreateWorkout}>+</button>\n          create workout\n        </div>\n    </>\n  );\n};\n\nexport default UserPage;\n","import React, { useEffect } from \"react\";\nimport \"./createWorkout.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { logout } from \"../../helperFunctions\";\n\nconst CreateWorkout: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const displayName = username ? username.split(\"@\")[0] : \"\";\n  const [workoutName, setWorkoutName] = useState(\"\");\n  const navigate = useNavigate();\n  const [workoutId, setWorkoutId] = useState();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/loggedin\",\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setUsername(data.username);\n        } else {\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  const handleSubmitWorkoutName = (event: React.FormEvent) => {\n    event.preventDefault();\n    const workoutNameInput = document.getElementById(\n      \"workout-name\"\n    ) as HTMLInputElement | null;\n\n    if (workoutNameInput) {\n      if (workoutNameInput.value !== \"\") {\n        setWorkoutName(workoutNameInput.value);\n      } else {\n        setWorkoutName(\"New Workout\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    const uploadWorkoutTitle = async () => {\n      if (workoutName) {\n        // only send request if workoutName is non-empty\n        try {\n          const response = await fetch(\n            process.env.REACT_APP_SERVER_URL + \"/createWorkoutName\",\n            {\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              method: \"POST\",\n              body: JSON.stringify({ workoutName }),\n            }\n          );\n\n          const data = await response.json();\n          setWorkoutId(data.id);\n        } catch (error) {\n          console.error(\"Error uploading workout title:\", error);\n        }\n      }\n    };\n\n    uploadWorkoutTitle();\n  }, [workoutName]);\n\n  useEffect(() => {\n    if (workoutName && workoutId) {\n      navigate(`/editWorkout/${workoutId}`);\n    }\n  }, [workoutId, navigate, workoutName]);\n\n  const logoutApp = () => {\n    logout()\n    navigate('/login')\n  }\n\n  return (\n    <>\n      <header>\n        <Link to=\"/user\"><h1>progressive</h1></Link>\n        <button id=\"logout\" onClick={logoutApp}>Logout</button>\n      </header>\n        <h2>{displayName}</h2>\n        <div id=\"getWorkoutName\">\n          <form onSubmit={handleSubmitWorkoutName}>\n            <label>Workout Name</label>\n            <br />\n            <input type=\"text\" maxLength={30} id=\"workout-name\" />\n            <br />\n            <button type=\"button\" onClick={handleSubmitWorkoutName}>\n              Submit\n            </button>\n          </form>\n        </div>\n    </>\n  );\n};\n\nexport default CreateWorkout;\n","import React, { useState, useEffect } from \"react\";\nimport \"./editWorkout.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { logout } from \"../../helperFunctions\";\n\nconst EditWorkout: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [selectedOption, setSelectedOption] = useState(\"Weighted Reps\");\n  const [workoutName, setWorkoutName] = useState(\"\");\n  const displayName = username ? username.split(\"@\")[0] : \"\";\n  const { workoutId } = useParams();\n  const [submitCount, setSubmitCount] = useState(0);\n  const [updateWorkoutData, setUpdateWorkoutData] = useState<any[]>([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/loggedin\",\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setUsername(data.username);\n        } else {\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  useEffect(() => {\n    const getWorkoutNameById = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL +\n            \"/getWorkout?workoutId=\" +\n            workoutId,\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setWorkoutName(data.workoutName);\n        } else {\n          navigate(`/user`);\n        }\n      } catch (error) {\n        console.error(\"Error getting workout:\", error);\n      }\n    };\n    getWorkoutNameById();\n  }, [navigate, workoutId]);\n\n  //fetch and display current workout exercises\n  useEffect(() => {\n    let currentWorkoutData: any[] = [];\n    const getWorkoutDataById = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL +\n            \"/getWorkoutData?workoutId=\" +\n            workoutId,\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          currentWorkoutData = [];\n\n          if (data.workoutData) {\n            for (let i = 0; i < data.workoutData.length; i++) {\n              currentWorkoutData.push(\n                data.workoutData[i].workout_data.workoutData\n              );\n            }\n          }\n\n          //generate current Workout list html\n          setUpdateWorkoutData(currentWorkoutData);\n        }\n      } catch (error) {\n        console.error(\"Error getting workout data:\", error);\n      }\n    };\n    getWorkoutDataById();\n  }, [submitCount, workoutId]);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    const exerciseData = [];\n\n    const typeOfExercise = (\n      (event.target as HTMLFormElement)[1] as HTMLInputElement\n    ).value;\n\n    if (typeOfExercise === \"Weighted Reps\") {\n      const exerciseName = (\n        (event.target as HTMLFormElement)[0] as HTMLInputElement\n      ).value;\n      const startingWeight = (\n        (event.target as HTMLFormElement)[2] as HTMLInputElement\n      ).value;\n      const startingWeightUnit = (\n        (event.target as HTMLFormElement)[3] as HTMLInputElement\n      ).value;\n      const noOfReps = (\n        (event.target as HTMLFormElement)[4] as HTMLInputElement\n      ).value;\n      const noOfSets = (\n        (event.target as HTMLFormElement)[5] as HTMLInputElement\n      ).value;\n\n      exerciseData.push(exerciseName);\n      exerciseData.push(typeOfExercise);\n      exerciseData.push(startingWeight);\n      exerciseData.push(startingWeightUnit);\n      exerciseData.push(noOfReps);\n      exerciseData.push(noOfSets);\n    }\n\n    if (typeOfExercise === \"Bodyweight Reps\") {\n      const exerciseName = (\n        (event.target as HTMLFormElement)[0] as HTMLInputElement\n      ).value;\n      const noOfReps = (\n        (event.target as HTMLFormElement)[2] as HTMLInputElement\n      ).value;\n      const noOfSets = (\n        (event.target as HTMLFormElement)[3] as HTMLInputElement\n      ).value;\n\n      exerciseData.push(exerciseName);\n      exerciseData.push(typeOfExercise);\n      exerciseData.push(noOfReps);\n      exerciseData.push(noOfSets);\n    }\n\n    if (typeOfExercise === \"Timed Exercise\") {\n      const exerciseName = (\n        (event.target as HTMLFormElement)[0] as HTMLInputElement\n      ).value;\n      const timeOfExercise = (\n        (event.target as HTMLFormElement)[2] as HTMLInputElement\n      ).value;\n      const noOfSets = (\n        (event.target as HTMLFormElement)[3] as HTMLInputElement\n      ).value;\n\n      exerciseData.push(exerciseName);\n      exerciseData.push(typeOfExercise);\n      exerciseData.push(timeOfExercise);\n      exerciseData.push(noOfSets);\n    }\n\n    try {\n      await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/addExercise\",\n        {\n          credentials: \"include\", // Include credentials for same-origin requests\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            workoutId: workoutId,\n            workoutData: exerciseData,\n          }),\n        }\n      );\n    } catch (error) {\n      console.error(\"Error adding exercise:\", error);\n    }\n\n    //reset exercise form\n    const exerciseInput = document.getElementById(\n      \"exerciseName\"\n    ) as HTMLInputElement;\n    exerciseInput.value = \"\";\n\n    const weightInput = document.getElementById(\"weight\") as HTMLInputElement;\n    if (weightInput) {\n      weightInput.value = \"\";\n    }\n\n    const repsInput = document.getElementById(\"smallInput\") as HTMLInputElement;\n    if (repsInput) {\n      repsInput.value = \"\";\n    }\n\n    const timeInput = document.getElementById(\"time\") as HTMLInputElement;\n    if (timeInput) {\n      timeInput.value = \"\";\n    }\n\n    const setsInput = document.getElementById(\"sets\") as HTMLInputElement;\n    if (setsInput) {\n      setsInput.value = \"\";\n    }\n\n    const addExercise = document.getElementById(\n      \"createWorkout\"\n    ) as HTMLDivElement;\n    addExercise.style.display = \"none\";\n\n    setSubmitCount((prev) => prev + 1);\n\n    //show add exercise button\n    const addExerciseButton = document.getElementById(\n      \"add-exercise-button\"\n    ) as HTMLButtonElement;\n    if (addExerciseButton) {\n      addExerciseButton.style.display = \"block\";\n    }\n  };\n\n  const showAddExercise = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    const addExercise = document.getElementById(\n      \"createWorkout\"\n    ) as HTMLDivElement;\n    addExercise.style.display = \"block\";\n\n    const addExerciseButton = document.getElementById(\n      \"add-exercise-button\"\n    ) as HTMLButtonElement;\n    if (addExerciseButton) {\n      addExerciseButton.style.display = \"none\";\n    }\n  };\n\n  const removeExercise = async (index: number) => {\n    try {\n      await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/removeExercise\",\n        {\n          credentials: \"include\", // Include credentials for same-origin requests\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            workoutId: workoutId,\n            index: index,\n          }),\n        }\n      );\n    } catch (error) {\n      console.error(\"Error adding exercise:\", error);\n    }\n\n    setSubmitCount((prev) => prev - 1);\n  };\n\n  const logoutApp = () => {\n    logout();\n    navigate(\"/login\");\n  };\n\n  return (\n    <>\n      <header>\n        <Link to=\"/user\">\n          <h1>progressive</h1>\n        </Link>\n        <button id=\"logout\" onClick={logoutApp}>\n          Logout\n        </button>\n      </header>\n        <h2>{displayName}</h2>\n        <div id=\"workout\">\n          <h3 id=\"workoutName\">{workoutName}</h3>\n          <div id=\"exerciseList\">\n            {updateWorkoutData.map((exercise, index) => (\n              <div key={index} className=\"exercise\">\n                {/* Check the exercise type */}\n                {exercise[1] === \"Weighted Reps\" && (\n                  <>\n                    {/* Format for Weighted Reps */}\n                    <div className=\"exercise-row\">\n                      <strong id=\"exercise-name\">{exercise[0]}:</strong>\n                      <div id=\"exercise-details\">\n                        <strong>\n                          {exercise[2]} {exercise[3]}\n                        </strong>{\" \"}\n                        for <strong>{exercise[4]} reps</strong>\n                        <br />\n                        for <strong>{exercise[5]} sets</strong>\n                      </div>\n                      <button\n                        id=\"remove-exercise\"\n                        onClick={() => removeExercise(index)}\n                      >\n                        -\n                      </button>\n                    </div>\n                  </>\n                )}\n                {exercise[1] === \"Bodyweight Reps\" && (\n                  <>\n                    {/* Format for Bodyweight Reps */}\n                    <div className=\"exercise-row\">\n                      <strong id=\"exercise-name\">{exercise[0]}:</strong>\n                      <div id=\"exercise-details\">\n                        <strong>{exercise[2]} reps</strong>\n                        &nbsp;for <strong>{exercise[3]} sets</strong>\n                      </div>\n\n                      <button\n                        id=\"remove-exercise\"\n                        onClick={() => removeExercise(index)}\n                      >\n                        -\n                      </button>\n                    </div>\n                  </>\n                )}\n                {exercise[1] === \"Timed Exercise\" && (\n                  <>\n                    {/* Format for Timed Exercise */}\n                    <div className=\"exercise-row\">\n                      <strong id=\"exercise-name\">{exercise[0]}:</strong>\n                      <div id=\"exercise-details\">\n                        <strong>{exercise[2]} seconds</strong>\n                        <br />\n                        for <strong>{exercise[3]} sets</strong>\n                        </div>\n                        <button\n                          id=\"remove-exercise\"\n                          onClick={() => removeExercise(index)}\n                        >\n                          -\n                        </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n          <button\n            type=\"button\"\n            onClick={showAddExercise}\n            id=\"add-exercise-button\"\n          >\n            Add Exercise\n          </button>\n        </div>\n        <div id=\"createWorkout\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <label>Exercise Name</label>\n                </div>\n                <div className=\"col-12 center-input\">\n                  <input type=\"text\" maxLength={30} id=\"exerciseName\" />\n                </div>\n              </div>\n              <div className=\"row margin-top\">\n                <div className=\"col-12\">\n                  <label>Exercise Type</label>\n                </div>\n                <div className=\"col-12 center-input\">\n                  <select\n                    value={selectedOption}\n                    onChange={handleSelectChange}\n                    id=\"workoutType\"\n                    className=\"center-input\"\n                  >\n                    <option value=\"Weighted Reps\">Weighted Reps</option>\n                    <option value=\"Bodyweight Reps\">Bodyweight Reps</option>\n                    <option value=\"Timed Exercise\">Timed Exercise</option>\n                  </select>\n                </div>\n              </div>\n              {selectedOption === \"Weighted Reps\" && (\n                <>\n                  <div className=\"row margin-top g-1\">\n                    <label>Starting Weight</label>\n                    <br />\n                    <div id=\"getWeight\">\n                      <input\n                        type=\"number\"\n                        name=\"StartingWeight\"\n                        style={{ textAlign: \"right\" }}\n                        id=\"weight\"\n                        min=\"0\"\n                        max=\"9999\"\n                      />\n                      <select id=\"unit\">\n                        <option value=\"kg\">Kg</option>\n                        <option value=\"lbs\">lbs</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div\n                    className=\"row justify-content-center margin-top\"\n                    id=\"repsInput\"\n                  >\n                    <label id=\"noOfReps\">Number of Reps</label>\n                    <input type=\"number\" id=\"smallInput\" min=\"1\" max=\"99\"/>\n                  </div>\n                </>\n              )}\n\n              {selectedOption === \"Bodyweight Reps\" && (\n                <>\n                  <div\n                    className=\"row justify-content-center margin-top\"\n                    id=\"repsInput\"\n                  >\n                    <label id=\"noOfReps\">Number of Reps</label>\n                    <input type=\"number\" id=\"smallInput\" min=\"1\" max=\"99\"/>\n                  </div>\n                </>\n              )}\n\n              {selectedOption === \"Timed Exercise\" && (\n                <>\n                  <div\n                    className=\"row justify-content-center margin-top\"\n                    id=\"repsInput\"\n                  >\n                    <label id=\"lengthOfTime\">Starting length of time(s):</label>\n                    <input type=\"number\" id=\"time\" min=\"1\" max=\"99999\"/>\n                  </div>\n                </>\n              )}\n\n              <div\n                className=\"row justify-content-center margin-top\"\n                id=\"setsInput\"\n              >\n                <label id=\"number-of-sets\">Number of Sets</label>\n                <input type=\"number\" id=\"sets\" />\n              </div>\n            </div>\n            <button type=\"submit\">Add Exercise</button>\n          </form>\n        </div>\n    </>\n  );\n};\n\nexport default EditWorkout;\n","import React, { useEffect, useState } from \"react\";\nimport \"./workout.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { logout } from \"../../helperFunctions\";\n\nconst Workout: React.FC = () => {\n  const { workoutId } = useParams();\n  const [exercises, setExercises] = useState<any[]>([]);\n  const [workoutName, setWorkoutName] = useState();\n  const [workoutIndex, setWorkoutIndex] = useState(0);\n  const [currentExercise, setCurrentExercise] = useState<any[]>([]);\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n\n  const displayName = username ? username.split(\"@\")[0] : \"\";\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL + \"/loggedin\",\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          // If logged in, redirect to user's page\n          setUsername(data.username);\n        } else {\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in status:\", error);\n      }\n    };\n\n    checkLoggedIn();\n  }, [navigate]);\n\n  useEffect(() => {\n    const getWorkoutNameById = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL +\n            \"/getWorkout?workoutId=\" +\n            workoutId,\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setWorkoutName(data.workoutName);\n        }\n      } catch (error) {\n        console.error(\"Error getting workout:\", error);\n      }\n    };\n    getWorkoutNameById();\n  }, [workoutId]);\n\n  useEffect(() => {\n    let currentWorkoutData: any[];\n    const getWorkoutDataById = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_SERVER_URL +\n            \"/getWorkoutData?workoutId=\" +\n            workoutId,\n          {\n            credentials: \"include\", // Include credentials for same-origin requests\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n\n          currentWorkoutData = [];\n\n          if (data.workoutData) {\n            for (let i = 0; i < data.workoutData.length; i++) {\n              currentWorkoutData.push(data.workoutData[i]);\n            }\n          }\n\n          setExercises(currentWorkoutData);\n        }\n      } catch (error) {\n        console.error(\"Error getting workout data:\", error);\n      }\n    };\n    getWorkoutDataById();\n  }, [workoutId]);\n\n  useEffect(() => {\n    if (exercises[workoutIndex]) {\n      setCurrentExercise(exercises[workoutIndex].workout_data.workoutData);\n    }\n  }, [exercises, workoutIndex]);\n\n  const logoutApp = () => {\n    logout();\n    navigate(\"/login\");\n  };\n\n  const nextExercise = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.currentTarget);\n    const difficulty = formData.get(\"difficulty\") as string;\n\n    event.currentTarget.reset();\n\n    const newWorkoutData = currentExercise;\n\n    //upload feedback\n    try {\n      await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/uploadExerciseDifficulty\",\n        {\n          method: \"POST\",\n          credentials: \"include\", // Include credentials for same-origin requests\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            exerciseId: exercises[workoutIndex].id,\n            difficulty: difficulty[0],\n            workoutData: newWorkoutData,\n          }),\n        }\n      );\n    } catch (error) {\n      console.error(\"Error uploading feedback data:\", error);\n    }\n\n    setWorkoutIndex((prev) => prev + 1);\n\n    if (workoutIndex >= exercises.length - 1) {\n      navigate(`/user`);\n    }\n  };\n\n  const skipExercise = () => {\n    //put exercise back to the end of the list\n    const tempExercises = exercises;\n\n    for (let i = exercises.length - 1; i > workoutIndex + 1; i--) {\n      tempExercises[i + 1] = tempExercises[i];\n    }\n\n    tempExercises[workoutIndex + 2] = tempExercises[workoutIndex];\n\n    setExercises(tempExercises);\n    setWorkoutIndex((prev) => prev + 1);\n  };\n\n  const progressExercise = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.currentTarget);\n    const newWeight = formData.get(\"progress\") as string;\n\n    const tempExercise = [...currentExercise];\n    tempExercise[2] = newWeight;\n\n    setCurrentExercise(tempExercise);\n\n    const newWorkoutData = tempExercise;\n    const difficulty = exercises[workoutIndex].last_difficulty;\n\n    //upload feedback\n    try {\n      await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/uploadExerciseDifficulty\",\n        {\n          method: \"POST\",\n          credentials: \"include\", // Include credentials for same-origin requests\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            exerciseId: exercises[workoutIndex].id,\n            difficulty: difficulty,\n            workoutData: newWorkoutData,\n          }),\n        }\n      );\n    } catch (error) {\n      console.error(\"Error uploading feedback data:\", error);\n    }\n\n    const progressExerciseDiv = document.getElementById(\"progress-exercise\");\n    const currentExerciseDiv = document.getElementById(\"current-exercise\");\n\n    if (progressExerciseDiv) {\n      progressExerciseDiv.style.display = \"none\";\n    }\n\n    if (currentExerciseDiv) {\n      currentExerciseDiv.style.display = \"block\";\n    }\n  };\n\n  const progressExerciseUnit = async (\n    event: React.FormEvent<HTMLFormElement>\n  ) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.currentTarget);\n    const unitToIncrease = formData.get(\"unitToIncrease\") as string;\n\n    const tempExercise = [...currentExercise];\n\n    if (unitToIncrease === \"true\" && tempExercise[1] === \"Bodyweight Reps\") {\n      const increaseBy = () => {\n        const value = Math.floor(parseFloat(tempExercise[2]) * 0.05);\n        if (value > 0) {\n          return value;\n        } else {\n          return 1;\n        }\n      };\n\n      tempExercise[2] = parseFloat(tempExercise[2]) + increaseBy();\n    }\n\n    if (unitToIncrease === \"true\" && tempExercise[1] === \"Timed Exercise\") {\n      const increaseBy = () => {\n        let value;\n        if (parseFloat(tempExercise[2]) < 60) {\n          value = 5;\n        } else if (\n          59 < parseFloat(tempExercise[2]) &&\n          parseFloat(tempExercise[2]) < 150\n        ) {\n          value = 10;\n        } else {\n          value = 30;\n        }\n        return value;\n      };\n\n      tempExercise[2] = parseFloat(tempExercise[2]) + increaseBy();\n    }\n    setCurrentExercise(tempExercise);\n\n    const difficulty = exercises[workoutIndex].last_difficulty;\n    const newWorkoutData = tempExercise;\n\n    //upload new data\n    try {\n      await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/uploadExerciseDifficulty\",\n        {\n          method: \"POST\",\n          credentials: \"include\", // Include credentials for same-origin requests\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            exerciseId: exercises[workoutIndex].id,\n            difficulty: difficulty,\n            workoutData: newWorkoutData,\n          }),\n        }\n      );\n    } catch (error) {\n      console.error(\"Error uploading feedback data:\", error);\n    }\n\n    const progressExerciseDiv = document.getElementById(\"progress-exercise\");\n    const currentExerciseDiv = document.getElementById(\"current-exercise\");\n\n    if (progressExerciseDiv) {\n      progressExerciseDiv.style.display = \"none\";\n    }\n\n    if (currentExerciseDiv) {\n      currentExerciseDiv.style.display = \"block\";\n    }\n  };\n\n  useEffect(() => {\n    const progressExerciseDiv = document.getElementById(\"progress-exercise\");\n    const currentExerciseDiv = document.getElementById(\"current-exercise\");\n\n    if (exercises[workoutIndex]) {\n      if (exercises[workoutIndex].last_difficulty === \"h\") {\n        if (progressExerciseDiv) {\n          progressExerciseDiv.style.display = \"none\";\n        }\n        if (currentExerciseDiv) {\n          currentExerciseDiv.style.display = \"block\";\n        }\n      }\n\n      if (exercises[workoutIndex].last_difficulty === \"m\") {\n        if (currentExerciseDiv) {\n          currentExerciseDiv.style.display = \"none\";\n        }\n        if (progressExerciseDiv) {\n          progressExerciseDiv.style.display = \"block\";\n        }\n      }\n\n      if (exercises[workoutIndex].last_difficulty === \"e\") {\n        if (currentExerciseDiv) {\n          currentExerciseDiv.style.display = \"none\";\n        }\n        if (progressExerciseDiv) {\n          progressExerciseDiv.style.display = \"block\";\n        }\n      }\n\n      if (exercises[workoutIndex].last_difficulty === null) {\n        if (currentExerciseDiv) {\n          currentExerciseDiv.style.display = \"block\";\n        }\n        if (progressExerciseDiv) {\n          progressExerciseDiv.style.display = \"none\";\n        }\n      }\n    }\n  }, [exercises, workoutIndex]);\n\n  const hideProgression = async () => {\n    //hide progress and show current workout\n\n    const tempExercise = [...currentExercise];\n\n    if (tempExercise[1] === \"Bodyweight Reps\") {\n      const increaseBy = () => {\n        const value = Math.round(parseFloat(tempExercise[2]) * 0.05);\n        if (value > 0) {\n          return value;\n        } else {\n          return 1;\n        }\n      };\n\n      tempExercise[2] = parseFloat(tempExercise[2]) + increaseBy();\n    }\n\n    if (tempExercise[1] === \"Timed Exercise\") {\n      const increaseBy = () => {\n        let value;\n        if (parseFloat(tempExercise[2]) < 60) {\n          value = 5;\n        } else if (\n          59 < parseFloat(tempExercise[2]) &&\n          parseFloat(tempExercise[2]) < 150\n        ) {\n          value = 10;\n        } else {\n          value = 30;\n        }\n        return value;\n      };\n\n      tempExercise[2] = parseFloat(tempExercise[2]) + increaseBy();\n    }\n    setCurrentExercise(tempExercise);\n\n    const difficulty = exercises[workoutIndex].last_difficulty;\n    const newWorkoutData = tempExercise;\n\n    //upload new data\n    try {\n      await fetch(\n        process.env.REACT_APP_SERVER_URL + \"/uploadExerciseDifficulty\",\n        {\n          method: \"POST\",\n          credentials: \"include\", // Include credentials for same-origin requests\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            exerciseId: exercises[workoutIndex].id,\n            difficulty: difficulty,\n            workoutData: newWorkoutData,\n          }),\n        }\n      );\n    } catch (error) {\n      console.error(\"Error uploading feedback data:\", error);\n    }\n\n    const progressExerciseDiv = document.getElementById(\"progress-exercise\");\n    const currentExerciseDiv = document.getElementById(\"current-exercise\");\n\n    if (progressExerciseDiv) {\n      progressExerciseDiv.style.display = \"none\";\n    }\n\n    if (currentExerciseDiv) {\n      currentExerciseDiv.style.display = \"block\";\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <Link to=\"/user\">\n          <h1>progressive</h1>\n        </Link>\n        <button id=\"logout\" onClick={logoutApp}>\n          Logout\n        </button>\n      </header>\n        <h2>{displayName}</h2>\n        <div id=\"progress-exercise\" style={{ display: \"none\" }}>\n          {exercises[workoutIndex] &&\n            exercises[workoutIndex].last_difficulty === \"m\" && (\n              <>\n                <h3>{workoutName}</h3>\n                <h5>You struggled but completed these sets last time</h5>\n                <div id=\"current-exercise-details\">\n                  {currentExercise !== undefined &&\n                    currentExercise[1] === \"Weighted Reps\" && (\n                      <>\n                        <div id=\"workout-details\">\n                          <strong id=\"exercise-name\">\n                            {currentExercise[0]}\n                          </strong>\n                          <div id=\"workout-data\">\n                            <strong>\n                              {currentExercise[2]}\n                              {currentExercise[3]}\n                            </strong>{\" \"}\n                            for&nbsp;\n                            <strong>{currentExercise[4]} reps</strong>\n                            <br />\n                            for <strong>{currentExercise[5]} sets</strong>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                  {currentExercise !== undefined &&\n                    currentExercise[1] === \"Bodyweight Reps\" && (\n                      <>\n                        <div id=\"workout-details\">\n                          <strong id=\"exercise-name\">\n                            {currentExercise[0]}\n                          </strong>\n                          <div id=\"workout-data\">\n                            <strong>{currentExercise[2]} reps</strong> for&nbsp;\n                            <strong>{currentExercise[3]} sets</strong>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                  {currentExercise !== undefined &&\n                    currentExercise[1] === \"Timed Exercise\" && (\n                      <>\n                        <div id=\"workout-details\">\n                          <strong id=\"exercise-name\">\n                            {currentExercise[0]}\n                          </strong>\n                          <div id=\"workout-data\">\n                            <strong>{currentExercise[2]} seconds</strong>\n                            <br /> for&nbsp;\n                            <strong>{currentExercise[3]} sets</strong>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                </div>\n                <h5 id=\"second-h5\">Increase difficulty if you wish</h5>\n                {currentExercise !== undefined &&\n                  currentExercise[1] === \"Weighted Reps\" && (\n                    <form onSubmit={progressExercise}>\n                      Pick you're next available weight up or keep it the same\n                      <br />\n                      <select id=\"progress\" name=\"progress\">\n                        {[0, 1, 2, 2.5, 3, 4, 5, 6, 7, 7.5, 8, 9, 10].map(\n                          (increment) => (\n                            <option\n                              key={increment}\n                              value={parseFloat(currentExercise[2]) + increment}\n                            >\n                              {parseFloat(currentExercise[2]) + increment}\n                            </option>\n                          )\n                        )}\n                      </select>\n                      &nbsp;{currentExercise[3]}\n                      <br />\n                      <button type=\"submit\" id=\"update\">\n                        Update\n                      </button>\n                    </form>\n                  )}\n                {currentExercise !== undefined &&\n                  currentExercise[1] === \"Bodyweight Reps\" && (\n                    <form onSubmit={progressExerciseUnit}>\n                      Add <strong>5%</strong> to reps, or not?\n                      <br />\n                      <label id=\"radio-yes-no\">\n                        <input\n                          type=\"radio\"\n                          name=\"unitToIncrease\"\n                          value=\"true\"\n                        />{\" \"}\n                        Yes!\n                      </label>\n                      <label id=\"radio-yes-no\">\n                        <input\n                          type=\"radio\"\n                          name=\"unitToIncrease\"\n                          value=\"false\"\n                        />{\" \"}\n                        No\n                      </label>\n                      <br />\n                      <button type=\"submit\" id=\"update\">\n                        Update\n                      </button>\n                    </form>\n                  )}\n                {currentExercise !== undefined &&\n                  currentExercise[1] === \"Timed Exercise\" && (\n                    <form onSubmit={progressExerciseUnit}>\n                      Add <strong>more time</strong>, or not?\n                      <br />\n                      <label id=\"radio-yes-no\">\n                        <input\n                          type=\"radio\"\n                          name=\"unitToIncrease\"\n                          value=\"true\"\n                        />{\" \"}\n                        Yes!\n                      </label>\n                      <label id=\"radio-yes-no\">\n                        <input\n                          type=\"radio\"\n                          name=\"unitToIncrease\"\n                          value=\"false\"\n                        />{\" \"}\n                        No\n                      </label>\n                      <br />\n                      <button type=\"submit\" id=\"update\">\n                        Update\n                      </button>\n                    </form>\n                  )}\n              </>\n            )}\n          {exercises[workoutIndex] &&\n            exercises[workoutIndex].last_difficulty === \"e\" && (\n              <>\n                <h3>{workoutName}</h3>\n                <h5>You said these sets were easy last time!</h5>\n                <div id=\"current-exercise-details\">\n                  {currentExercise !== undefined &&\n                    currentExercise[1] === \"Weighted Reps\" && (\n                      <>\n                        <div id=\"workout-details\">\n                          <strong id=\"exercise-name\">\n                            {currentExercise[0]}\n                          </strong>\n                          <div id=\"workout-data\">\n                            <strong>\n                              {currentExercise[2]}\n                              {currentExercise[3]}\n                            </strong>{\" \"}\n                            for&nbsp;\n                            <strong>{currentExercise[4]} reps</strong>\n                            <br />\n                            for <strong>{currentExercise[5]} sets</strong>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                  {currentExercise !== undefined &&\n                    currentExercise[1] === \"Bodyweight Reps\" && (\n                      <>\n                        <div id=\"workout-details\">\n                          <strong id=\"exercise-name\">\n                            {currentExercise[0]}\n                          </strong>\n                          <div id=\"workout-data\">\n                            <strong>{currentExercise[2]} reps</strong> for&nbsp;\n                            <strong>{currentExercise[3]} sets</strong>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                  {currentExercise !== undefined &&\n                    currentExercise[1] === \"Timed Exercise\" && (\n                      <>\n                        <div id=\"workout-details\">\n                          <strong id=\"exercise-name\">\n                            {currentExercise[0]}\n                          </strong>\n                          <div id=\"workout-data\">\n                            <strong>{currentExercise[2]} seconds</strong>\n                            <br /> for&nbsp;\n                            <strong>{currentExercise[3]} sets</strong>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                </div>\n                <h5 id=\"second-h5\">Time to up the difficulty!</h5>\n                {currentExercise !== undefined &&\n                  currentExercise[1] === \"Weighted Reps\" && (\n                    <form onSubmit={progressExercise}>\n                      Pick you're next available weight up\n                      <br />\n                      <select id=\"progress\" name=\"progress\">\n                        {[1, 2, 2.5, 3, 4, 5, 6, 7, 7.5, 8, 9, 10].map(\n                          (increment) => (\n                            <option\n                              key={increment}\n                              value={parseFloat(currentExercise[2]) + increment}\n                            >\n                              {parseFloat(currentExercise[2]) + increment}\n                            </option>\n                          )\n                        )}\n                      </select>\n                      &nbsp;{currentExercise[3]}\n                      <br />\n                      <button type=\"submit\" id=\"update\">\n                        Update\n                      </button>\n                    </form>\n                  )}\n                {currentExercise !== undefined &&\n                  currentExercise[1] === \"Bodyweight Reps\" && (\n                    <>\n                      Lets increase those reps!\n                      <br />\n                      <strong>5%</strong> added\n                      <br />\n                      <button onClick={hideProgression} id=\"continue\">\n                        Continue{\">>\"}\n                      </button>\n                    </>\n                  )}\n\n                {currentExercise !== undefined &&\n                  currentExercise[1] === \"Timed Exercise\" && (\n                    <>\n                      Lets bump up that time!\n                      <br />\n                      <strong>Time increased!</strong>\n                      <br />\n                      <button onClick={hideProgression} id=\"continue\">\n                        Continue{\">>\"}\n                      </button>\n                    </>\n                  )}\n              </>\n            )}\n        </div>\n        <div id=\"current-exercise\" style={{ display: \"none\" }}>\n          <h3>{workoutName}</h3>\n          <div id=\"current-exercise-details\">\n            {workoutIndex < exercises.length - 1 && (\n              <h4 id=\"current-exercise-text\">Current Exercise</h4>\n            )}\n            {workoutIndex >= exercises.length - 1 && (\n              <h4 id=\"current-exercise-text\">Final Exercise</h4>\n            )}\n            {currentExercise !== undefined &&\n              currentExercise[1] === \"Weighted Reps\" && (\n                <>\n                  <div id=\"workout-details\">\n                    <strong id=\"exercise-name\">{currentExercise[0]}</strong>\n                    <div id=\"workout-data\">\n                      <strong>\n                        {currentExercise[2]}\n                        {currentExercise[3]}\n                      </strong>{\" \"}\n                      for&nbsp;\n                      <strong>{currentExercise[4]} reps</strong>\n                      <br />\n                      for <strong>{currentExercise[5]} sets</strong>\n                    </div>\n                  </div>\n                </>\n              )}\n            {currentExercise !== undefined &&\n              currentExercise[1] === \"Bodyweight Reps\" && (\n                <>\n                  <div id=\"workout-details\">\n                    <strong id=\"exercise-name\">{currentExercise[0]}</strong>\n                    <div id=\"workout-data\">\n                      <strong>{currentExercise[2]} reps</strong> for&nbsp;\n                      <strong>{currentExercise[3]} sets</strong>\n                    </div>\n                  </div>\n                </>\n              )}\n            {currentExercise !== undefined &&\n              currentExercise[1] === \"Timed Exercise\" && (\n                <>\n                  <div id=\"workout-details\">\n                    <strong id=\"exercise-name\">{currentExercise[0]}</strong>\n                    <div id=\"workout-data\">\n                      <strong>{currentExercise[2]} seconds</strong>\n                      <br /> for&nbsp;\n                      <strong>{currentExercise[3]} sets</strong>\n                    </div>\n                  </div>\n                </>\n              )}\n          </div>\n          {workoutIndex < exercises.length - 1 && (\n            <div id=\"skip-row\">\n              Machine Taken?\n              <button id=\"skip-exercise\" onClick={skipExercise}>\n                Skip Exercise for Now\n              </button>\n            </div>\n          )}\n          <div id=\"complete-exercise\">\n            <h5>Was the last rep difficult?</h5>\n            <form onSubmit={nextExercise}>\n              <label id=\"hard\">\n                <input type=\"radio\" name=\"difficulty\" value=\"hard\" /> I could\n                not do it...\n              </label>\n              <br />\n              <label id=\"medium\">\n                <input type=\"radio\" name=\"difficulty\" value=\"medium\" /> It was\n                slow and hard.\n              </label>\n              <br />\n              <label id=\"easy\">\n                <input type=\"radio\" name=\"difficulty\" value=\"easy\" /> It moved\n                easily!\n              </label>\n              <br />\n              {workoutIndex < exercises.length - 1 && (\n                <button type=\"submit\">Next Exercise{\">>\"}</button>\n              )}\n              {workoutIndex >= exercises.length - 1 && (\n                <button type=\"submit\">Finish Workout! {\">>\"}</button>\n              )}\n            </form>\n          </div>\n        </div>\n    </>\n  );\n};\n\nexport default Workout;\n","import React from 'react';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Home from './pages/home/Home';\nimport Register from './pages/register/Register';\nimport Login from './pages/login/Login';\nimport UserPage from './pages/userPage/UserPage'\nimport CreateWorkout from './pages/createWorkout/CreateWorkout';\nimport EditWorkout from './pages/editWorkout/EditWorkout'\nimport Workout from './pages/workout/Workout';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/register\" element={<Register />} />\n      <Route path=\"/login\" element={<Login /> } />\n      <Route path=\"/user\" element={<UserPage />} />\n      <Route path=\"/createworkout\" element={<CreateWorkout />} />\n      <Route path=\"/editWorkout/:workoutId\" element={<EditWorkout />} />\n      <Route path=\"/workout/:workoutId\" element={<Workout />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}